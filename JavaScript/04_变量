赋值时，解析器要确定变量是基本类型还是引用类型
除object是引用类型，其他5种都是基本类型，包括字符串
可以给引用类型动态的添加属性，如果对象不删除，同时属性不删除，这个属性会一直存在
ECMAScript中函数的参数是局部变量
检测基本类型时，typeof是得力的工具，检测引用类型时，用instanceof，如果变量是给定类型的(原型链)的实例，返回true
ECMA-262规定任何在内部实现[[Call]]方法的对象都应该在应用typeof操作符时返回function
执行环境定义了变量或函数有权访问的其他数据，决定了他们各自的行为。每个执行环境都有一个与其关联的变量对象，环境中定义的所有变量和函数都在里面，程序无法访问，解析器会使用
在Web浏览器中，全局执行环境是window对象，因此所有全局变量都是作为window的属性和方法
当代码在环境中执行时，会创建变量对象的一个作用域链，用途是保证对执行环境有权访问的所有变量和函数的有序访问。作用域链的前端，是当前执行的代码所在环境的变量对象。简单说就是最小作用域一级级往外层链，标识符的解析就是一层层往外
使用var声明的变量会自动被添加到最接近的环境中，如果不使用，会被添加到全局环境
垃圾回收中标识无用变量的策略会因为实现而异，在浏览器中通常有两种
    标记清除，标记变量的状态(进入环境/离开环境)，垃圾收集器标记所有变量
    引用计数，比较少见，存在循环引用的问题
    IE中有一部分对象并不是原生js实现的，比如DOM和BOM中的对象就是C++以COM对象形式实现的。COM对象的垃圾回收也是引用计数
垃圾回收是周期运行的，如果分配内存很多，回收的工作量会很大，所以确定周期的条件很重要