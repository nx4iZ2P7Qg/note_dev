var person = {}等同于var person = new Object();
函数可以接收json作为参数
访问对象属性除了通用的.，还有[]方法，后者的优点是可以用变量来访问属性
Array的length属性不是只读的，可以从发问移除项，或新增undefined项，使用a[a.length] = b在尾部添加新项b
    数组最多可以包含近43亿项，超出会异常，如果数据内项过多，会导致响应时间变长
    Array.isArray()用来判断是否是数据对象
    数组用push()和pop()来模拟栈，前者返回数据长度，后者返回移除的值
    用push()和shift()来模拟队列，用unshift()和pop()来模拟反向队列
    reverse()用来反转
    sort()用来排序，调用各项的toString()后，升序，这个方法接收一个比较函数，如果第一参数"应该"位于第二个之前，返回负数，"应该"位于第二个参数之后，返回正数，相等返回0
    concat()，拼接数据或其他对象
    slice()，截取数组
    splice()，编辑数组，删除添加替换，第一个参数是起始位置，第二个参数是删除数量
    indexOf(), lastIndexOf()，使用===定位项，找不到返回-1
    迭代
        every(), 各项都true，返回true
        filter(), 返回符合条件的数据，numbers.filter(function(item, index, array) {return item > 2};);
        forEach(), for循环，没有返回值
        map(), 返回数组，每项处理
        some()，某项或多项true，返回true
    归并，迭代所有值，返回最终值，reduce()，reduceRight()，values.reduce(function(prev, cur, index, array) {return prev + cur;});第一次迭代发生在数据第二项上
Date
    Date.parse()，new Date('2018-01-12 15:09:36')，ECMAScript没有定义字符格式
    Date.UTC()，new Date(Date.UTC(2018, 2, 12, 15, 10, 05));其中月份以0开始
    ECMAScript5添加了Date.now()，之前的版本可以使用+ new Date();初始化出来的是同样的毫秒数
    toString()和toLocalString()在不同的浏览器中会返回不同的信息，通常前者带时区
    valueOf()返回毫秒数
RegExp
    / pattern / flags;其中flags可以是g, i, m(多行)，这3个值可以同时复数出现
    new RegExp()的参数是字符串，有时要双重转义不方便，推荐上面的形式
    ECMAScript3中的字面量共享一个RegExp实例，使用构造函数是多个实例，ECMAScript5规定，字面量每次创建新的实例
    常用的方法为exec()与test()
Function
    ECMAScript中函数是对象，是Function类型的实例
    函数名是指针变量
    arguments, this都是函数内特殊对象，arguments有一个属性callee，指向此arguments对应的函数，this含义与java类似，只有全局的情况下，this指向window
    caller，调用当前函数的函数引用
    严格模式下，访问arguments.callee会报错
    ECMAScript5定义了arguments.caller，严格模式下会报错，非严格模式下是undefined，没什么用的东西，主要是为了与函数的caller区分开
    严格模式下不能为函数的caller赋值
    函数的length属性表示希望接收的参数个数
    函数的prototype属性，ECMAScript的引用类型，都在prototype中保存了所有实例方法，ECMAScript5中，prototype属性不可枚举
    每个函数包含两个非继承来的方法，apply()和call()，都是在特定的作用域中调用函数，实际上等于设置函数体内的this值，这两个方法可以扩充函数作用域，让对象与方法解耦
    ECMAScript5中定义了bind()
    函数继承的toString()可以方便调试
包装类型
    Boolean, Number, String，引用类型与基本包装类型的主要区别就是生存期，这3个自动创建的包装类的对象，只存在一行代码执行的瞬间，最好不要随便调用这些构造方法
    建议不要使用Boolean
    Number的有toFix()来指定小数位位数，toExponential()以指数方式输出，toPrecision()会以待处理的数值决定调用前面哪个方法，只接受一个位数参数
    String提供slice(), substr(), substring()
    match()方法基本与RegExp的exec()方法相同，replace()用来替换字符串
    split()，跨浏览器兼容问题参考http://blog.stevenlevithan.com/archives/cross-browser-split
    fromCharCode()与charCodeAt()相反
单体内置对象
    Object, Array, String, Global, Math
    不属性任何其他对象的属性和函数，都属于Global对象的属性。
    Global包括encodeURI()和encodeURIComponent()对URI编码，以便发送给浏览器，有效的URI不能包含空格，这两个方法可以用特殊的utf-8编码替代所有无效字符
    这两个方法的主要区别在于，前者用于整个URI，后者用于URI中的某一段，前者不会对属于URI的特殊字符编码，如冒号，斜线，问号，井号，后者会对任何非标准字符编码
    对应方法为decodeURI()和decodeURIComponent()
    eval()，严格模式下，外部无法访问eval()中创建的变量或函数，也无法为eval赋值
    ECMAScript没有指出如何访问Global，浏览器将其作为window对象的一部分实现了，因此Global的变量和函数，用window访问
    或者使用var global = function() {return this;}();获得Global的引用
    Math.max(), Math.min()，要找到数组中的最大或最小值，用Math.max.apply(Math, array);
    Math.ceil(), Math.floor(), Math.floor()
    Math.random(), Math.floor(Math.random() * 可能值的总数 + 第一个可能的值)
