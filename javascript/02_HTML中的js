两种引入
    <script type='text/javascript'>code here</script>，项目中不可能使用的方式，脚本执行完成之前，HTML中的其他内容都不会显示
    <script src='./abc.js' type='text/javascript'></script>，标准方式，与上面一样，解析时HTML的内容也会停止
    其中type属性可以不写，默认值就是'text/javascript'
    惯例扩展名为js，但不必要，浏览器不检查，于是js可以动态生成，这时要保证服务器响应正确的MIME类型。
    如果指定src属性，<script>与结束标签之间的code会忽略，src可以访问外部域的js文件
标签的位置
    传统上，<script>应该在<head>内，目的是为了方便管理script，但这样会因为解析文件，减慢界面内容出现时间(body才开始呈现)
    现在WEB应用，一般会放在</body>前面
    <defer="defer">，立即下载，延迟</html>后执行，不能保证多个脚本的加载顺序。
    HTML5要求脚本按照出现先后执行，而且先于DomContentLoaded事情执行。
    HTML5规定<defer>只适用于外部脚本，内部脚本的此属性会被忽略
    <defer>没有必需使用的价值。
    <async>同理，多个脚本不能保证加载顺序
    XHTML不用学习了，<![CDATA[ ... ]]>片段是文档中的一个特殊区域，这个区域中可以包含不需要解析的任意格式的文本内容。可以使用"<"而不被认为是标签，在兼容XHTML的浏览器中可以使用，但还有一些不兼容XHTML的浏览器，需要变更为//<![CDATA[ ... ]]，这种格式现代浏览器都可以用，有最高的兼容性
    使用外部script的优点：可维护，缓存，不需要注释来适应不同浏览器，HTML/XHTML对于外部脚本语法一致
文档模式DOCTYPE
    如果在文档开始处没有类型说明，则所有浏览器都会开启混杂模式，不推荐，没有一致性
    标准模式
        <!-- HTML 4.01 严格型 -->
        <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
        "http://www.w3.org/TR/html4/strict.dtd">
        <!-- XHTML 1.0 严格型 -->
        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
        <!-- HTML 5 -->
        <!DOCTYPE html>
    准标准模式
        <!-- HTML 4.01 过渡型 -->
        <!DOCTYPE HTML PUBLIC
        "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
        <!-- HTML 4.01 框架集型 -->
        <!DOCTYPE HTML PUBLIC
        "-//W3C//DTD HTML 4.01 Frameset//EN"
        "http://www.w3.org/TR/html4/frameset.dtd">
        <!-- XHTML 1.0 过渡型 -->
        <!DOCTYPE html PUBLIC
        "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
        <!-- XHTML 1.0 框架集型 -->
        <!DOCTYPE html PUBLIC
        "-//W3C//DTD XHTML 1.0 Frameset//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<noscript>
    可以包含<body>中出现的元素，<script>除外，在浏览器不支持脚本，或脚本被禁用时，显示标签内容